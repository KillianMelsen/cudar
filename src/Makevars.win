CUDA_HOME = C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.3
CUDA_INC = $(CUDA_HOME)/include

R_HOME = C:/Program Files/R/R-4.2.2
R_LIB = $(R_HOME)/bin/x64
R_INC = $(R_HOME)/include
RCPP_INC = C:/Users/Killian/AppData/Local/R/win-library/4.2/Rcpp/include

PKG_LIBS = -L"$(CUDA_HOME)/lib/x64" -lcudart -L"$(R_LIB)" -lR

NVCC = nvcc
NVCC_FLAGS = -gencode arch=compute_86,code=sm_86 -I"$(CUDA_INC)"
CXX = g++
CXX_FLAGS = -I"$(R_INC)" -I"$(RCPP_INC)" -std=gnu++11

### Define objects
CPP_sources = CPP.cpp RcppExports.cpp
CUDA_sources = CUDA.cu
OBJECTS = CPP.obj RcppExports.obj CUDA.obj

all: cudar.dll
cudar.dll: $(OBJECTS)

#cudar.dll:
#	g++ -std=gnu++11 -shared -static-libgcc -o $@ tmp.def CPP.obj RcppExports.obj CUDA.obj -L"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.3/lib/x64" -lcudart -L"C:/Program Files/R/R-4.2.2/bin/x64" -lR -L"C:/rtools42/x86_64-w64-mingw32.static.posix/lib/x64" -L"C:/rtools42/x86_64-w64-mingw32.static.posix/lib" -L"C:/Program Files/R/R-4.2.2/bin/x64" -lR

CPP.obj: CPP.cpp
	$(CXX) $(CXX_FLAGS) -c $< -o $@

RcppExports.obj: RcppExports.cpp
	$(CXX) $(CXX_FLAGS) -c $< -o $@

CUDA.obj: CUDA.cu
	$(NVCC) $(NVCC_FLAGS) -c $< -o $@


